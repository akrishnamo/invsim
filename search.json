[
  {
    "objectID": "sdsim.html",
    "href": "sdsim.html",
    "title": "Simulation",
    "section": "",
    "text": "source\n\nfoo\n\n foo ()\n\n\nsource\n\n\nclip_date\n\n clip_date (df_full_range)\n\nThis function clips the date based on the below criteria Note: If the sales qty is zero in the beginning, the date range is trimmed off at the begining, till the first positive sales qty is observed\n\nsource\n\n\nGet_Day_Wise_Order_Qty\n\n Get_Day_Wise_Order_Qty (df_sales_data, MARKET_CODE_ID, DATE_RANGE)\n\nGet daywise sales data for a given SKU in a given date range\n\nsales_data     =  pd.read_csv('4571_1Y_sales.csv', parse_dates = ['date'])\n#convert market_code_id to integer value\nsales_data['mktcode_id'] = sales_data['mktcode_id'].astype('int')\n#sort date column chronologically\nsales_data.sort_values(by = 'date', ascending= False, inplace=True)\nsales_data.head()\n\n\n\n\n\n  \n    \n      \n      loc_id\n      mktcode_id\n      unique_mktcode_name\n      mktcode_name\n      fg_id\n      fg_name\n      catalog_id\n      catalog_code\n      catalog_name\n      can_be_sold\n      category_id\n      category_name\n      active\n      date\n      qty\n    \n  \n  \n    \n      9576\n      4571\n      1011\n      8513PEC:Safedecor Safari\n      8513 PEC\n      3539\n      FGB0318\n      6\n      CAT0002\n      Safedecor Safari\n      1\n      66\n      0.8 TEX\n      1\n      2022-10-13\n      13\n    \n    \n      9595\n      4571\n      1076\n      8005PEC:Safedecor Safari\n      8005 PEC\n      3277\n      FGB0056\n      6\n      CAT0002\n      Safedecor Safari\n      1\n      66\n      0.8 TEX\n      1\n      2022-10-13\n      2\n    \n    \n      9593\n      4571\n      8200\n      8606VNZ:Safedecor Safari\n      8606 VNZ\n      20541\n      FGB0711\n      6\n      CAT0002\n      Safedecor Safari\n      1\n      66\n      0.8 TEX\n      1\n      2022-10-13\n      3\n    \n    \n      9592\n      4571\n      555\n      11263VCA:Safedecor 1.0mm Master\n      11263 VCA\n      3915\n      FGA0220\n      4\n      CAT0001\n      Safedecor 1.0mm Master\n      1\n      93\n      1.0 TEX 1\n      1\n      2022-10-13\n      5\n    \n    \n      9591\n      4571\n      4701\n      10062UG+:Safedecor 1.0mm Master\n      10062 UG+\n      5115\n      FGA0591\n      4\n      CAT0001\n      Safedecor 1.0mm Master\n      1\n      108\n      1.0 UG+/SG+\n      1\n      2022-10-13\n      2\n    \n  \n\n\n\n\n\nx=Get_Day_Wise_Order_Qty(sales_data, 6250, 52)\n\n\nx\n\n\n\n\n\n  \n    \n      \n      date\n      qty\n    \n  \n  \n    \n      0\n      2021-10-16\n      5.0\n    \n    \n      1\n      2021-10-17\n      0.0\n    \n    \n      2\n      2021-10-18\n      4.0\n    \n    \n      3\n      2021-10-19\n      2.0\n    \n    \n      4\n      2021-10-20\n      0.0\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      358\n      2022-10-09\n      0.0\n    \n    \n      359\n      2022-10-10\n      14.0\n    \n    \n      360\n      2022-10-11\n      80.0\n    \n    \n      361\n      2022-10-12\n      0.0\n    \n    \n      362\n      2022-10-13\n      3.0\n    \n  \n\n363 rows × 2 columns"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "invsim",
    "section": "",
    "text": "This is the repository for inventory simulation module for Safe Decor. It includes simulation and order recommendation functionality"
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "invsim",
    "section": "Install",
    "text": "Install\npip install invsim"
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "invsim",
    "section": "How to use",
    "text": "How to use\nClip_date returns first non zero date if there are at least 30 elements, if not just returns the first date\nCase1: there are more than 30 elements\n\nndays=40\nleading_zero_days=5\ndates=pd.date_range(start='2022-01-01', periods=ndays, freq='D')\nvalues=[0]*leading_zero_days+[10]*(ndays-leading_zero_days)\n\ndf=pd.DataFrame({'date':dates, 'qty': values})\ndf['date']=df.date.apply(lambda x: x.date())\ndisplay(df.T)\n\nprint(\"clip date =\", clip_date(df))\n\n\n\n\n\n  \n    \n      \n      0\n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      ...\n      30\n      31\n      32\n      33\n      34\n      35\n      36\n      37\n      38\n      39\n    \n  \n  \n    \n      date\n      2022-01-01\n      2022-01-02\n      2022-01-03\n      2022-01-04\n      2022-01-05\n      2022-01-06\n      2022-01-07\n      2022-01-08\n      2022-01-09\n      2022-01-10\n      ...\n      2022-01-31\n      2022-02-01\n      2022-02-02\n      2022-02-03\n      2022-02-04\n      2022-02-05\n      2022-02-06\n      2022-02-07\n      2022-02-08\n      2022-02-09\n    \n    \n      qty\n      0\n      0\n      0\n      0\n      0\n      10\n      10\n      10\n      10\n      10\n      ...\n      10\n      10\n      10\n      10\n      10\n      10\n      10\n      10\n      10\n      10\n    \n  \n\n2 rows × 40 columns\n\n\n\nclip date = 2022-01-06\n\n\nCase2: There are less than 30 elements\n\nndays=29\nleading_zero_days=5\ndates=pd.date_range(start='2022-01-01', periods=ndays, freq='D')\nvalues=[0]*leading_zero_days+[10]*(ndays-leading_zero_days)\n\ndf=pd.DataFrame({'date':dates, 'qty': values})\ndf['date']=df.date.apply(lambda x: x.date())\ndisplay(df.T)\n\nprint(\"clip date =\", clip_date(df))\n\n\n\n\n\n  \n    \n      \n      0\n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      ...\n      19\n      20\n      21\n      22\n      23\n      24\n      25\n      26\n      27\n      28\n    \n  \n  \n    \n      date\n      2022-01-01\n      2022-01-02\n      2022-01-03\n      2022-01-04\n      2022-01-05\n      2022-01-06\n      2022-01-07\n      2022-01-08\n      2022-01-09\n      2022-01-10\n      ...\n      2022-01-20\n      2022-01-21\n      2022-01-22\n      2022-01-23\n      2022-01-24\n      2022-01-25\n      2022-01-26\n      2022-01-27\n      2022-01-28\n      2022-01-29\n    \n    \n      qty\n      0\n      0\n      0\n      0\n      0\n      10\n      10\n      10\n      10\n      10\n      ...\n      10\n      10\n      10\n      10\n      10\n      10\n      10\n      10\n      10\n      10\n    \n  \n\n2 rows × 29 columns\n\n\n\nclip date = 2022-01-01"
  }
]